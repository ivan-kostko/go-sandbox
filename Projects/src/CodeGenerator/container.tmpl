//   Copyright (c) 2016 Ivan A Kostko (github.com/ivan-kostko)

//   Licensed under the Apache License, Version 2.0 (the "License");
//   you may not use this file except in compliance with the License.
//   You may obtain a copy of the License at

//       http://www.apache.org/licenses/LICENSE-2.0

//   Unless required by applicable law or agreed to in writing, software
//   distributed under the License is distributed on an "AS IS" BASIS,
//   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//   See the License for the specific language governing permissions and
//   limitations under the License.

package {{ .PackageName }}

import (
	. "github.com/ivan-kostko/GoLibs/CustomErrors"
	tsMap "github.com/ivan-kostko/GoLibs/ThreadSafe/Map"
)

// Predefined list of error messages
const (
	ERR_WONTGET{{ .TypeName.ToUpper() }}     	   = "{{ .PackageName }}: Wont get registered instance for given alias"
	ERR_WRONGREGTYPE{{ .TypeName.ToUpper() }}      = "{{ .PackageName }}: The registered instance is not of {{ .FullTypeName }} type"
	ERR_ALREADYREGISTERED{{ .TypeName.ToUpper() }} = "{{ .PackageName }}: There is already registered instance for provided alias. Wont register second time"
)

const INIT_CAPACITY = 10

// Represents the list of registered {{ .FullTypeName }} instancies
var {{ .TypeName.ToLower() }}s = tsMap.New(INIT_CAPACITY)







package {{ .PackageName }}

import (
	"io"
)

func (this {{ .FullTypeName }}) WriteTo(writer io.Writer) (int64, error) {

  length, err := writer.Write(data)
  return int64(length), err
}
